/* para listar itens disponiveis: */
$ dnf list \*mysql\* | grep dev

/* adicionando novos repositorios, pode rodar todos em lote  */
wget http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-18.noarch.rpm
rpm -ivh rpmfusion-free-release-18.noarch.rpm
wget http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-18.noarch.rpm
rpm -ivh rpmfusion-nonfree-release-18.noarch.rpm
rpm -Uvh http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm
rpm -Uvh http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-stable.noarch.rpm
rpm -Uvh http://rpms.famillecollet.com/remi-release-19.rpm
rpm -Uvh http://rpms.famillecollet.com/remi-release-20.rpm
rpm -Uvh http://rpms.famillecollet.com/remi-release-21.rpm
rpm -Uvh http://rpms.famillecollet.com/remi-release-22.rpm


/* criando um ambiente python dev */
--instalar python-dev no fedora
dnf install gcc
dnf install gpp
dnf install gcc g++ gcc-c++
dnf install python-devel
dnf install python-pip
dnf install openssl
dnf install openssl-devel
dnf install openssl-devel.i686
dnf install openssl-perl.i686
dnf install openssl-static.i686
dnf install pyOpenSSL.i686
dnf install pyOpenSSL-doc.noarch
dnf install openssl.i686
dnf install openssl-libs.i686
dnf install MySQL-python.i686
pip install setuptools
pip install --upgrade setuptools
wget https://bootstrap.pypa.io/ez_setup.py -O - | python
pip install virtualenv
pip install Flask
pip install Flask-SQLAlchemy
pip install Flask-Testing
pip install ipdb
pip install Flask-Admin
pip install Flask-Babel
pip install Flask-KVSession
pip install Flask-Login
pip install Flask-Migrate
pip install Flask-Script
pip install Flask-WTF
pip install Flask-FeatureFlags
pip install Flask-Cache
pip install Flask-Mail
pip install MySQL-python
pip install SQLAlchemy-Utils
pip install tablib
pip install SQLAlchemy
pip install pytest

--ERROR 2002: Can't connect to local MySQL server
# mysql_install_db
# chown -R mysql.mysql /var/lib/mysql
# safe_mysqld &
# mysql
# service mysqld stop
# service mysqld start

--install mysqld
dnf install community-mysql community-mysql-test community-mysql-libs community-mysql-devel community-mysql-bench community-mysql-common community-mysql-server community-mysql-embedded community-mysql-embedded-devel

--recovery password mysql
service mysqld stop
mysqld_safe --init-file=recoveryPasswordMysql.sql --skip-grant-tables
mysqld_safe --skip-grant-tables
mysqld_safe --skip-grant-tables
mysql
use mysql;
update user set password=PASSWORD("123456") where User='root';
select * from user where User='root';
flush privileges;
exit;
ps -aux | grep mysqld
kill -9 19373 19528 20790
service mysqld start
service mysqld status


/* install php 5.6 e httpd */
yum --enablerepo=remi,remi-php56 install httpd php php-common php-pecl-apcu php-cli php-pear php-pdo php-mysqlnd php-pgsql php-pecl-mongo php-sqlite php-pecl-memcache php-pecl-memcached php-gd php-mbstring php-mcrypt php-xml
#use restart after update
systemctl start httpd.service 

/* install php 5.5 com php-unit e php-soap */
dnf install php php-common php-pecl-apcu php-cli php-pear php-pdo php-mysqlnd php-pgsql php-pecl-mongo php-gd php-mbstring php-mcrypt php-xml php-soap php-phpunit-PHPUnit.noarch

/* para procurar um programa no yum  */
dnf search java

/* este argumento ira pular partes que estao em conflito e instalar somente o que pode  */
dnf install --skip-broken  nome-do-programa

/* yum kde */
dnf install @kde-desktop
dnf update @kde
 
/* lista de repositorios instalados */
dnf repolist

/*  libs para assistir filmes mp4  */
dnf -y install AtomicParsley.i686 flac.i686 freeimage.i686 jorbis.noarch libdv.i686 libfc14audiodecoder.i686 libfc14audiodecoder-devel.i686 nxtvepg.i686 crystalhd-firmware.noarch gstreamer-plugin-crystalhd.i686 mingw32-flac.noarch perl-MIME-Base32.noarch gstreamer-plugins-bad gstreamer-plugins-ugly gstreamer-ffmpeg gstreamer-plugins-bad-free-extras.i686 gstreamer-plugins-bad-free.i686 gstreamer-plugins-bad-free-devel.i686 gstreamer-plugins-bad-free-devel-docs.i686 gstreamer1-plugins-bad-free-extras.i686 mingw32-gstreamer-plugins-bad-free.noarch mingw64-gstreamer-plugins-bad-free.noarch
dnf install libmad 
dnf install vlc
dnf install mozilla-vlc (optional)

/* suporte para .mp3 */
dnf install gstreamer-plugins-bad gstreamer-plugins-bad-free-extras gstreamer-plugins-bad-nonfree gstreamer-plugins-ugly gstreamer-ffmpeg gstreamer1-libav gstreamer1-plugins-bad-free-extras gstreamer1-plugins-bad-freeworld gstreamer1-plugins-base-tools updates gstreamer1-plugins-good-extras gstreamer1-plugins-ugly gstreamer1-plugins-bad-free gstreamer1-plugins-good gstreamer1-plugins-base gstreamer1
dnf install xmms-mp3
dnf install k3b-extras-freeworld 


/* deletar pacotes instalados pelo yum */
dnf erase php php-common php-pecl-apcu php-cli php-pear php-pdo php-mysqlnd php-pgsql php-pecl-mongo php-sqlite php-pecl-memcache php-pecl-memcached php-gd php-mbstring php-mcrypt php-xml
ou
dnf remove php php-common php-pecl-apcu php-cli php-pear php-pdo php-mysqlnd php-pgsql php-pecl-mongo php-sqlite php-pecl-memcache php-pecl-memcached php-gd php-mbstring php-mcrypt php-xml


/* Generating SSH keys */
# Lists the files in your .ssh directory, if they exist
ls -al ~/.ssh

# Creates a new ssh key, using the provided email as a label
# Generating public/private rsa key pair.
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"

# start the ssh-agent in the background
eval "$(ssh-agent -s)"

# Agent pid 59566
ssh-add ~/.ssh/id_rsa
cat ~/.ssh/id_rsa.pub 

# Attempts to ssh to GitHub, test connect;
ssh -T git@github.com

/* composer php */
curl -sS https://getcomposer.org/installer | php
php composer.phar install
php composer.phar require respect/data
php composer.phar require respect/config
php composer.phar require respect/relational

/* php cli web server to develop  */
php -S 0.0.0.0:8080 -t public/ public/index.php


/* virtual host htpd || apache2 web server */
<VirtualHost *:80>
    ServerName site
    DocumentRoot /var/www/html/site/public
    <Directory /var/www/html/site/public>
        DirectoryIndex index.php
        AllowOverride All
        Order allow,deny
        Allow from all
        <IfModule mod_authz_core.c>
        Require all granted
        </IfModule>
    </Directory>
</VirtualHost>


========================================================================================================
wget + SOAP

como usar o wget para fazer post, e neste caso, autenticar, e enviar um xml para o servidor processar

[root@localhost developer]# wget --http-user="usuario" --http-passwd="123456" --post-file="wsdl-teste-oi-tradeup.xml" http://endpoint.com --output-document="wsdl-debug"
--2014-12-15 08:56:44--  http://endpoint.com
Connecting to 200.225.84.43:80... connected.
HTTP request sent, awaiting response... 401 Access Denied
Connecting to 200.225.84.43:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 607 [Text/XML]
Saving to: ‘wsdl-debug’

wsdl-debug                                100%[=======================================================================================>]     607  --.-KB/s   in 0s     

2014-12-15 08:56:47 (25.6 MB/s) - ‘wsdl-debug’ saved [607/607]

[root@localhost developer]# cat wsdl-debug
<?xml version='1.0'?><NSPRODUCTS><HEADER><VERSION>43mdv010</VERSION><PARTNER>NETBR55</PARTNER><RETURNCODE>1000</RETURNCODE><STATUS>SUCCESS</STATUS><MESSAGE>[1000] Transaction is successful </MESSAGE></HEADER><DATA><CONFIRMATION>NETBR55_141215105645_OIS332331770393</CONFIRMATION><REFERENCE>OI3661418646559815</REFERENCE><NSREF>NCS507562792</NSREF><CUSTOMERID>ois332331770393</CUSTOMERID><EMAIL>ois332331770393@oi.com.br</EMAIL><PASSWORD>yW2oB6sT1y</PASSWORD><MCAFFEURL>http://br.mcafee.com/</MCAFFEURL><ITEMS><ITEM SKU='907-66226-srvc_1umma' QTY='3'/></ITEMS></DATA></NSPRODUCTS>

+curl examples - curl http://curl.haxx.se
Request com header + chave
curl -i -H'Authorization: Login apikey="security.chave.subchave"' http://endpoint-web-service

GET form:
curl "www.hotmail.com/when/junk.cgi?birthyear=1905&press=OK"

POST form:
curl -d "username=usuario&password=senha" https://it.yahoo.com/

File Upload POST:
curl -F upload=@localfilename -F press=OK [URL]

PUT:
curl -T uploadfile www.uploadhttp.com/receive.cgi

Auth:
curl -uusuario:senha https://it.yahoo.com/


========================================================================================================
/* alguns padroes que usei para recuperar os nomes de varios arquivos de um codigo fonte de um repositorio no git */
(" class="js-directory-link" id="[0-9a-z]*-[0-9a-z]*" title="[0-9]{4}-[0-9]{2}-[0-9]{2}_[A-Z0-9]*.xml">[0-9]{4}-[0-9]{2}-[0-9]{2}_[A-Z0-9]*.xml)
([0-9]{4}-[0-9]{2}-[0-9]{2}_ISP[0-9]{3}.xml)$
(" class="js-directory-link" id="[0-9a-z]*-[0-9a-z]*" title="[0-9]{4}-[0-9]{2}-[0-9]{2}_ISP[0-9]{3}.xml">)
(" class="js-directory-link" id="[0-9a-z]-[0-9a-z]")
(id="[0-9a-z]-[0-9a-z]")
/* busca quebra d linha no final do texto em ambientes windows */
\r\n
/* busca quebra d linha no final do texto em ambientes unix */
\n
========================================================================================================

